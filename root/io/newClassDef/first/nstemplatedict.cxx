//
// File generated by ./rootcint at Thu Jan 31 11:51:55 2002.
// Do NOT change. Changes will be lost next time file is generated
//
#include "nstemplatedict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

// Since CINT ignore the std namespace, we need to do so in this file.
namespace std {}; using namespace std;

//______________________________________________________________________________
// Static variable to hold class pointer
template <> TClass *MySpace::MyTemplate<const int*>::fgIsA = 0;

//______________________________________________________________________________
template <> const char *MySpace::MyTemplate<const int*>::Class_Name()
{
   // Return the class name for MySpace::MyTemplate<const int*>.
   return "MySpace::MyTemplate<const int*>";
}

//______________________________________________________________________________
template <> const char* MySpace::MyTemplate<const int*>::ImplFileName()
{
   return R__tInit< MySpace::MyTemplate<const int*> >::GetImplFileName();
}

//______________________________________________________________________________
template <> int   MySpace::MyTemplate<const int*>::ImplFileLine()
{
   return R__tInit< MySpace::MyTemplate<const int*> >::GetImplFileLine();
}

//______________________________________________________________________________
template <> void MySpace::MyTemplate<const int*>::Dictionary()
{
   fgIsA = R__tInit<MySpace::MyTemplate<const int*> >::GetClass();
}

//______________________________________________________________________________
template <> TClass *MySpace::MyTemplate<const int*>::Class()
{
   if (!fgIsA) fgIsA = R__tInit<MySpace::MyTemplate<const int*> >::GetClass();
   return fgIsA;
}

// Static variable to hold initialization object
static R__tInit< MySpace::MyTemplate<const int*> > __gR__InitMySpacecLcLMyTemplatelEconstsPintmUgR(4);

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, MySpace::MyTemplate<const int*> *&obj)
{
   // Read a pointer to an object of class MySpace::MyTemplate<const int*>.

   obj = (MySpace::MyTemplate<const int*> *) buf.ReadObject(MySpace::MyTemplate<const int*>::Class());
   return buf;
}

//______________________________________________________________________________
void R__MySpacecLcLMyTemplatelEconstsPintmUgR_vars(TBuffer &R__b, void *R__p, int)
{
   vector<int> &vars = *(vector<int> *)R__p;
   if (R__b.IsReading()) {
      {
         vars.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            vars.push_back(R__t);
         }
      }
   } else {
      {
         R__b << int(vars.size());
         vector<int>::iterator R__k;
         for (R__k = vars.begin(); R__k != vars.end(); ++R__k) {
            R__b << *R__k;
         }
      }
   }
}

//______________________________________________________________________________
template <> void MySpace::MyTemplate<const int*>::Streamer(TBuffer &R__b)
{
   // Stream an object of class MySpace::MyTemplate<const int*>.

   if (R__b.IsReading()) {
      MySpace::MyTemplate<const int*>::Class()->ReadBuffer(R__b, this);
   } else {
      MySpace::MyTemplate<const int*>::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
template <> void MySpace::MyTemplate<const int*>::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class MySpace::MyTemplate<const int*>.

   TClass *R__cl  = MySpace::MyTemplate<const int*>::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "*variable", &variable);
   R__insp.Inspect(R__cl, R__parent, "vars", (void*)&vars);
   R__cl->SetStreamer("vars",R__MySpacecLcLMyTemplatelEconstsPintmUgR_vars);
   TObject::ShowMembers(R__insp, R__parent);
}

/********************************************************
* nstemplatedict.cxx
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtablenstemplatedict();

extern "C" void G__set_cpp_environmentnstemplatedict() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("./Rtypes.h");
  G__add_compiledheader("nstemplate.h");
  G__cpp_reset_tagtablenstemplatedict();
}
class G__nstemplatedictdOcxx_tag {};

void* operator new(size_t size,G__nstemplatedictdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__nstemplatedictdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_nstemplatedictdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevnstemplatedict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MySpace */

/* MySpace::MyTemplate<const int*> */
static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_MyTemplatelEconstsPintmUgR_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   MySpace::MyTemplate<const int*> *p=NULL;
      p = new MySpace::MyTemplate<const int*>((const int*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_MyTemplatelEconstsPintmUgR_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   MySpace::MyTemplate<const int*> *p=NULL;
   if(G__getaryconstruct()) p=new MySpace::MyTemplate<const int*>[G__getaryconstruct()];
   else                    p=new MySpace::MyTemplate<const int*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_Class_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((MySpace::MyTemplate<const int*>*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_Class_Name_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((MySpace::MyTemplate<const int*>*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_Class_Version_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((MySpace::MyTemplate<const int*>*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_Dictionary_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MySpace::MyTemplate<const int*>*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_IsA_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const MySpace::MyTemplate<const int*>*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_ShowMembers_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MySpace::MyTemplate<const int*>*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_Streamer_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MySpace::MyTemplate<const int*>*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_StreamerNVirtual_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MySpace::MyTemplate<const int*>*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_DeclFileName_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((MySpace::MyTemplate<const int*>*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_DeclFileLine_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MySpace::MyTemplate<const int*>*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_ImplFileName_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((MySpace::MyTemplate<const int*>*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_ImplFileLine_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MySpace::MyTemplate<const int*>*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_MyTemplatelEconstsPintmUgR_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   MySpace::MyTemplate<const int*> *p;
   p=new MySpace::MyTemplate<const int*>(*(MySpace::MyTemplate<const int*>*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MySpace::MyTemplate<const int*> G__TMySpacecLcLMyTemplatelEconstsPintmUgR;
static int G__MySpacecLcLMyTemplatelEconstsPintmUgR_wAMyTemplatelEconstsPintmUgR_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (MySpace::MyTemplate<const int*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (MySpace::MyTemplate<const int*> *)((G__getstructoffset())+sizeof(MySpace::MyTemplate<const int*>)*i);
   else  delete (MySpace::MyTemplate<const int*> *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MySpace */

/* MySpace::MyTemplate<const int*> */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncnstemplatedict {
 public:
  G__Sizep2memfuncnstemplatedict() {p=&G__Sizep2memfuncnstemplatedict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncnstemplatedict::*p)();
};

size_t G__get_sizep2memfuncnstemplatedict()
{
  G__Sizep2memfuncnstemplatedict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancenstemplatedict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR))) {
     MySpace::MyTemplate<const int*> *G__Lderived;
     G__Lderived=(MySpace::MyTemplate<const int*>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR),G__get_linked_tagnum(&G__nstemplatedictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablenstemplatedict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,
-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,
-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Seek_t",105,-1,0,
-1);
   G__setnewtype(-1,"File pointer (int)",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,
-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Float 8 bytes (double)",0);
   G__search_typename2("Text_t",99,-1,0,
-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",98,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (unsigned char)",0);
   G__search_typename2("Byte_t",98,-1,0,
-1);
   G__setnewtype(-1,"Byte (8 bits) (unsigned char)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,0,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Ssiz_t",105,-1,0,
-1);
   G__setnewtype(-1,"String size (int)",0);
   G__search_typename2("Real_t",102,-1,0,
-1);
   G__setnewtype(-1,"TVector and TMatrix element type (float)",0);
   G__search_typename2("Streamer_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("VoidFuncPtr_t",89,-1,0,
-1);
   G__setnewtype(-1,"pointer to void function",0);
   G__search_typename2("FreeHookFun_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ReAllocFun_t",81,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ReAllocCFun_t",81,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Axis_t",100,-1,0,
-1);
   G__setnewtype(-1,"Axis values type (double)",0);
   G__search_typename2("Stat_t",100,-1,0,
-1);
   G__setnewtype(-1,"Statistics type (double)",0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Id: TROOT.h,v 1.21 2002/01/27 15:53:40 rdm Exp $",0);
   G__search_typename2("value_type",105,-1,0,
G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",73,-1,0,
G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",73,-1,0,
G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",73,-1,0,
G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",73,-1,0,
G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",105,-1,0,
G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",105,-1,0,
G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,
G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,
G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("random_access_iterator<int,difference_type>",117,G__get_linked_tagnum(&G__nstemplatedictLN_random_access_iteratorlEintcOlonggR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Id: TROOT.h,v 1.21 2002/01/27 15:53:40 rdm Exp $",0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgRcLcLreverse_iterator),0,G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MySpace */
static void G__setup_memvarMySpace(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nstemplatedictLN_MySpace));
   {
   }
   G__tag_memvar_reset();
}


   /* MySpace::MyTemplate<const int*> */
static void G__setup_memvarMySpacecLcLMyTemplatelEconstsPintmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR));
   { MySpace::MyTemplate<const int*> *p; p=(MySpace::MyTemplate<const int*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->variable)-(long)(p)),73,0,1,-1,-1,-1,1,"variable=",0,"!");
   G__memvar_setup((void*)((long)(&p->vars)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR),G__defined_typename("vector<int>"),-1,1,"vars=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__nstemplatedictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarnstemplatedict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMySpace(void) {
   /* MySpace */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nstemplatedictLN_MySpace));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMySpacecLcLMyTemplatelEconstsPintmUgR(void) {
   /* MySpace::MyTemplate<const int*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR));
   G__memfunc_setup("MyTemplate<const int*>",2104,G__MySpacecLcLMyTemplatelEconstsPintmUgR_MyTemplatelEconstsPintmUgR_0_0,105,G__get_linked_tagnum(&G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR),-1,0,1,1,1,0,"I - - 10 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MyTemplate<const int*>",2104,G__MySpacecLcLMyTemplatelEconstsPintmUgR_MyTemplatelEconstsPintmUgR_1_0,105,G__get_linked_tagnum(&G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__MySpacecLcLMyTemplatelEconstsPintmUgR_Class_2_0,85,G__get_linked_tagnum(&G__nstemplatedictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__MySpacecLcLMyTemplatelEconstsPintmUgR_Class_Name_3_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__MySpacecLcLMyTemplatelEconstsPintmUgR_Class_Version_4_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__MySpacecLcLMyTemplatelEconstsPintmUgR_Dictionary_5_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__MySpacecLcLMyTemplatelEconstsPintmUgR_IsA_6_0,85,G__get_linked_tagnum(&G__nstemplatedictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__MySpacecLcLMyTemplatelEconstsPintmUgR_ShowMembers_7_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__MySpacecLcLMyTemplatelEconstsPintmUgR_Streamer_8_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MySpacecLcLMyTemplatelEconstsPintmUgR_StreamerNVirtual_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__MySpacecLcLMyTemplatelEconstsPintmUgR_DeclFileName_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__MySpacecLcLMyTemplatelEconstsPintmUgR_DeclFileLine_1_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__MySpacecLcLMyTemplatelEconstsPintmUgR_ImplFileName_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__MySpacecLcLMyTemplatelEconstsPintmUgR_ImplFileLine_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("MyTemplate<const int*>",2104,G__MySpacecLcLMyTemplatelEconstsPintmUgR_MyTemplatelEconstsPintmUgR_4_1,(int)('i'),
G__get_linked_tagnum(&G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR),-1,0,1,1,1,0,"u 'MySpace::MyTemplate<const int*>' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~MyTemplate<const int*>",2230,G__MySpacecLcLMyTemplatelEconstsPintmUgR_wAMyTemplatelEconstsPintmUgR_5_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncnstemplatedict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalnstemplatedict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcnstemplatedict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__nstemplatedictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__nstemplatedictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__nstemplatedictLN_MySpace = { "MySpace" , 110 , -1 };
G__linked_taginfo G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR = { "vector<int,__malloc_alloc_template<0> >" , 99 , -1 };
G__linked_taginfo G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgRcLcLreverse_iterator = { "vector<int,__malloc_alloc_template<0> >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__nstemplatedictLN_random_access_iteratorlEintcOlonggR = { "random_access_iterator<int,long>" , 115 , -1 };
G__linked_taginfo G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR = { "MySpace::MyTemplate<const int*>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablenstemplatedict() {
  G__nstemplatedictLN_TClass.tagnum = -1 ;
  G__nstemplatedictLN_TObject.tagnum = -1 ;
  G__nstemplatedictLN_MySpace.tagnum = -1 ;
  G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgR.tagnum = -1 ;
  G__nstemplatedictLN_vectorlEintcO__malloc_alloc_templatelE0gRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__nstemplatedictLN_random_access_iteratorlEintcOlonggR.tagnum = -1 ;
  G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablenstemplatedict() {

   /* Setting up class,struct,union tag entry */
   G__tagtable_setup(G__get_linked_tagnum(&G__nstemplatedictLN_MySpace),0,-1,0,(char*)NULL,G__setup_memvarMySpace,G__setup_memfuncMySpace);
   G__tagtable_setup(G__get_linked_tagnum(&G__nstemplatedictLN_MySpacecLcLMyTemplatelEconstsPintmUgR),sizeof(MySpace::MyTemplate<const int*>),-1,291072,(char*)NULL,G__setup_memvarMySpacecLcLMyTemplatelEconstsPintmUgR,G__setup_memfuncMySpacecLcLMyTemplatelEconstsPintmUgR);
}
extern "C" void G__cpp_setupnstemplatedict(void) {
  G__check_setup_version(30051515,"G__cpp_setupnstemplatedict()");
  G__set_cpp_environmentnstemplatedict();
  G__cpp_setup_tagtablenstemplatedict();

  G__cpp_setup_inheritancenstemplatedict();

  G__cpp_setup_typetablenstemplatedict();

  G__cpp_setup_memvarnstemplatedict();

  G__cpp_setup_memfuncnstemplatedict();
  G__cpp_setup_globalnstemplatedict();
  G__cpp_setup_funcnstemplatedict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncnstemplatedict();
  return;
}
class G__cpp_setup_initnstemplatedict {
  public:
    G__cpp_setup_initnstemplatedict() { G__add_setup_func("nstemplatedict",(G__incsetup)(&G__cpp_setupnstemplatedict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initnstemplatedict() { G__remove_setup_func("nstemplatedict"); }
};
G__cpp_setup_initnstemplatedict G__cpp_setup_initializernstemplatedict;

