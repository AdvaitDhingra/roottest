#!/bin/bash
# Name: addtest
# Desc: Updates the Makefile
# Args: $1 -> test directory
#       $2 -> test Name
#	    

printUSAGE() { 
		echo "" ;
		echo "Usage: addtest test_path test name"  ;
	       	echo "  where test name is the name of the test to be added"
		echo "  where test path is the directory path for the test to be added"; 
	        echo "";
	        echo "addtest is a script to add test to the directories, update
		Makefile, create .ref, runTESTNAME.C and update cvs repository";
	        echo "" ;
		exit 1; 
	     }


if [ $# -lt 2 ] ; then 
	printUSAGE ; 
fi

dir=$1
testname=$2

printALREADY_EXIST() {
			echo "" ;
			echo "A target '$1' already exists in $2/Makefile " ;
			exit 1 ;
		     }

printERROR() { echo "ERROR: $@." >&2 ;  }

# check whether sufficient args are given

check_target=`grep -F " $testname " $dir/Makefile`

if [ "$check_target" != "" ]; then
	printALREADY_EXIST $testname $dir;
fi


check_target2=`grep "^[[:space:]]*$testname[[:space:]]*:" $dir/Makefile`

if [ "$check_target2" != "" ]; then
	printALREADY_EXIST $testname $dir;
fi


if [ ! -d "$dir" ] ; then
	printERROR "The source $dir is not a directory, or does not exist"
	echo "use 'mktest $dir' to add test directory"
	
	#mktest $dir
	selection=
	until [ "$selection" = "0" ]; do
	    echo "1 - Create $dir and add test '$testname'"
	    echo "0 - exit"
	    echo ""
	    echo -n "Enter selection: "
	    read selection
	    echo ""
	    case $selection in
	        1 ) mktest $dir ; addtest $dir $testname; exit 1;;
	        0 ) exit ;;
	        * ) echo "Please enter 1 or 0"
	    esac
	done
fi


cd $dir

sed -e "s/TEST_TARGETS += /TEST_TARGETS += $testname /g" Makefile > Makefile1
rm Makefile

mv Makefile1 Makefile

echo "" >> Makefile
echo "$testname: $testname.log" >> Makefile
echo "	\$(TestDiff)" >> Makefile

if [ ! -s $testname.ref ]; then
    echo "" > $testname.ref
    echo "Processing run$testname.C..." >> $testname.ref
fi

if [ ! -s run$testname.C ]; then
    echo "{"  > run$testname.C
    echo "// Fill out the code of the actual test" >> run$testname.C 
    echo "}" >> run$testname.C 
fi

echo "Message: Test successfully added"
