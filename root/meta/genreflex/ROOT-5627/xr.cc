//
// File generated by rootcling at Tue Oct 29 11:53:02 2013

// With commandline rootcling -v4 -f xr.cc -inlineInputHeader -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -DGNU_GCC -D_GNU_SOURCE classes.h classes_def.xml 
// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME xr
#include "xr.h"
#include "TDataMember.h"

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

// Header files passed as explicit arguments
#include "classes.h"

// Header files passed via #pragma extra_include

namespace ROOT {
   void TH2Analyzer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TH2Analyzer(void *p);
   static void deleteArray_TH2Analyzer(void *p);
   static void destruct_TH2Analyzer(void *p);
   static void streamer_TH2Analyzer(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TH2Analyzer*)
   {
      ::TH2Analyzer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TH2Analyzer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TH2Analyzer", ::TH2Analyzer::Class_Version(), "TH2Analyzer.h", 20,
                  typeid(::TH2Analyzer), DefineBehavior(ptr, ptr),
                  &::TH2Analyzer::Dictionary, isa_proxy, 16,
                  sizeof(::TH2Analyzer) );
      instance.SetDelete(&delete_TH2Analyzer);
      instance.SetDeleteArray(&deleteArray_TH2Analyzer);
      instance.SetDestructor(&destruct_TH2Analyzer);
      instance.SetStreamerFunc(&streamer_TH2Analyzer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TH2Analyzer*)
   {
      return GenerateInitInstanceLocal((::TH2Analyzer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TH2Analyzer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TH2Analyzer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TH2Analyzer::Class_Name()
{
   return "TH2Analyzer";
}

//______________________________________________________________________________
const char *TH2Analyzer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TH2Analyzer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TH2Analyzer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TH2Analyzer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TH2Analyzer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TH2Analyzer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TH2Analyzer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TH2Analyzer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TH2Analyzer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TH2Analyzer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TH2Analyzer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TH2Analyzer::Class(),this);
   }
}

//______________________________________________________________________________
void TH2Analyzer::ShowMembers(TMemberInspector &R__insp)
{
   gInterpreter->InspectMembers(R__insp, this, ::TH2Analyzer::IsA());
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TH2Analyzer(void *p) {
      delete ((::TH2Analyzer*)p);
   }
   static void deleteArray_TH2Analyzer(void *p) {
      delete [] ((::TH2Analyzer*)p);
   }
   static void destruct_TH2Analyzer(void *p) {
      typedef ::TH2Analyzer current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TH2Analyzer(TBuffer &buf, void *obj) {
      ((::TH2Analyzer*)obj)->::TH2Analyzer::Streamer(buf);
   }
} // end of namespace ROOT for class ::TH2Analyzer

void TriggerDictionaryInitalization_xr() {
      static const char* headers[] = {
0      };
      static const char* allHeaders[] = {
"././xr_dictContent.h",
"././xr_dictUmbrella.h",
"./TH2Analyzer.h",
"./classes.h",
"/home/dpiparo/RootDevel/Root6/root/etc/cling/Interpreter/RuntimeException.h",
"/home/dpiparo/RootDevel/Root6/root/etc/cling/Interpreter/RuntimeUniverse.h",
"/home/dpiparo/RootDevel/Root6/root/etc/cling/Interpreter/ValuePrinter.h",
"/home/dpiparo/RootDevel/Root6/root/etc/cling/Interpreter/ValuePrinterInfo.h",
"/home/dpiparo/RootDevel/Root6/root/etc/cling/lib/clang/3.4/include/stdarg.h",
"/home/dpiparo/RootDevel/Root6/root/etc/cling/lib/clang/3.4/include/stddef.h",
"/home/dpiparo/RootDevel/Root6/root/etc/cling/lib/clang/3.4/include/stdint.h",
"/home/dpiparo/RootDevel/Root6/root/include/DllImport.h",
"/home/dpiparo/RootDevel/Root6/root/include/RConfig.h",
"/home/dpiparo/RootDevel/Root6/root/include/RVersion.h",
"/home/dpiparo/RootDevel/Root6/root/include/Riosfwd.h",
"/home/dpiparo/RootDevel/Root6/root/include/Rtypeinfo.h",
"/home/dpiparo/RootDevel/Root6/root/include/Rtypes.h",
"/home/dpiparo/RootDevel/Root6/root/include/TBuffer.h",
"/home/dpiparo/RootDevel/Root6/root/include/TClingRuntime.h",
"/home/dpiparo/RootDevel/Root6/root/include/TGenericClassInfo.h",
"/home/dpiparo/RootDevel/Root6/root/include/TObject.h",
"/home/dpiparo/RootDevel/Root6/root/include/TSchemaHelper.h",
"/home/dpiparo/RootDevel/Root6/root/include/TStorage.h",
"/home/dpiparo/RootDevel/Root6/root/include/TVersionCheck.h",
"/home/dpiparo/RootDevel/Root6/root/include/snprintf.h",
"/home/dpiparo/RootDevel/Root6/root/include/strlcpy.h",
"/usr/include/_G_config.h",
"/usr/include/alloca.h",
"/usr/include/asm-generic/errno-base.h",
"/usr/include/asm-generic/errno.h",
"/usr/include/assert.h",
"/usr/include/ctype.h",
"/usr/include/endian.h",
"/usr/include/errno.h",
"/usr/include/features.h",
"/usr/include/getopt.h",
"/usr/include/libio.h",
"/usr/include/linux/errno.h",
"/usr/include/locale.h",
"/usr/include/math.h",
"/usr/include/pthread.h",
"/usr/include/sched.h",
"/usr/include/stdint.h",
"/usr/include/stdio.h",
"/usr/include/stdlib.h",
"/usr/include/string.h",
"/usr/include/time.h",
"/usr/include/unistd.h",
"/usr/include/wchar.h",
"/usr/include/x86_64-linux-gnu/asm/errno.h",
"/usr/include/x86_64-linux-gnu/bits/byteswap.h",
"/usr/include/x86_64-linux-gnu/bits/confname.h",
"/usr/include/x86_64-linux-gnu/bits/endian.h",
"/usr/include/x86_64-linux-gnu/bits/environments.h",
"/usr/include/x86_64-linux-gnu/bits/errno.h",
"/usr/include/x86_64-linux-gnu/bits/huge_val.h",
"/usr/include/x86_64-linux-gnu/bits/huge_valf.h",
"/usr/include/x86_64-linux-gnu/bits/huge_vall.h",
"/usr/include/x86_64-linux-gnu/bits/inf.h",
"/usr/include/x86_64-linux-gnu/bits/locale.h",
"/usr/include/x86_64-linux-gnu/bits/mathcalls.h",
"/usr/include/x86_64-linux-gnu/bits/mathdef.h",
"/usr/include/x86_64-linux-gnu/bits/nan.h",
"/usr/include/x86_64-linux-gnu/bits/posix_opt.h",
"/usr/include/x86_64-linux-gnu/bits/predefs.h",
"/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h",
"/usr/include/x86_64-linux-gnu/bits/sched.h",
"/usr/include/x86_64-linux-gnu/bits/select.h",
"/usr/include/x86_64-linux-gnu/bits/setjmp.h",
"/usr/include/x86_64-linux-gnu/bits/sigset.h",
"/usr/include/x86_64-linux-gnu/bits/stdio_lim.h",
"/usr/include/x86_64-linux-gnu/bits/sys_errlist.h",
"/usr/include/x86_64-linux-gnu/bits/time.h",
"/usr/include/x86_64-linux-gnu/bits/timex.h",
"/usr/include/x86_64-linux-gnu/bits/types.h",
"/usr/include/x86_64-linux-gnu/bits/typesizes.h",
"/usr/include/x86_64-linux-gnu/bits/waitflags.h",
"/usr/include/x86_64-linux-gnu/bits/waitstatus.h",
"/usr/include/x86_64-linux-gnu/bits/wchar.h",
"/usr/include/x86_64-linux-gnu/bits/wordsize.h",
"/usr/include/x86_64-linux-gnu/gnu/stubs-64.h",
"/usr/include/x86_64-linux-gnu/gnu/stubs.h",
"/usr/include/x86_64-linux-gnu/sys/cdefs.h",
"/usr/include/x86_64-linux-gnu/sys/select.h",
"/usr/include/x86_64-linux-gnu/sys/sysmacros.h",
"/usr/include/x86_64-linux-gnu/sys/types.h",
"/usr/include/xlocale.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/backward/binders.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/alloc_traits.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/allocator.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/atomic_lockfree_defines.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/basic_string.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/basic_string.tcc",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/char_traits.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/concept_check.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cxxabi_forced.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_ptr.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/functexcept.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/functional_hash.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/hash_bytes.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/localefwd.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/memoryfwd.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/move.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/nested_exception.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/ostream_insert.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/postypes.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/ptr_traits.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/range_access.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_construct.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_function.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator_base_funcs.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator_base_types.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_pair.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_vector.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stringfwd.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/cctype",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/cerrno",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/clocale",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/cstdint",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/cstdio",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/cstdlib",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/cwchar",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/debug/debug.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/exception",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/alloc_traits.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/atomicity.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/new_allocator.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/string_conversions.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/type_traits.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/initializer_list",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/iosfwd",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/new",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/string",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/type_traits",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/typeinfo",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/vector",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++locale.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/cpu_defines.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/gthr.h",
"/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/os_defines.h",
"xr.cc.h",
0
      };
      static const char* includePaths[] = {
"/home/dpiparo/RootDevel/Root6/root/include",
"/home/dpiparo/RootDevel/Root6/roottest/root/meta/genreflex/ROOT-5627/",
0
      };
      static const char* payloadCode = "#ifndef ROOT_Math_VectorUtil_Cint\n"
"  #define ROOT_Math_VectorUtil_Cint\n"
"#endif\n"
"#ifndef G__VECTOR_HAS_CLASS_ITERATOR\n"
"  #define G__VECTOR_HAS_CLASS_ITERATOR\n"
"#endif\n"
"#ifndef CMS_DICT_IMPL\n"
"  #define CMS_DICT_IMPL\n"
"#endif\n"
"#ifndef _REENTRANT\n"
"  #define _REENTRANT\n"
"#endif\n"
"#ifndef GNUSOURCE\n"
"  #define GNUSOURCE\n"
"#endif\n"
"#ifndef __STRICT_ANSI__\n"
"  #define __STRICT_ANSI__\n"
"#endif\n"
"#ifndef GNU_GCC\n"
"  #define GNU_GCC\n"
"#endif\n"
"#ifndef _GNU_SOURCE\n"
"  #define _GNU_SOURCE\n"
"#endif\n"
"\n"
"\n"
"#include \"TH2Analyzer.h\"\n"
"//#include \"TH2.h\"  // WORKAROUND for genreflex bug\n"
"//#include \"TH2D.h\" // WORKAROUND for genreflex bug\n"
"\n"
"namespace {\n"
"  namespace {\n"
"      \n"
"  }\n"
"}\n"
;
      static bool sInitialized = false;
      if (!sInitialized) {
        TROOT::RegisterModule("xr",
          headers, allHeaders, includePaths, payloadCode,
          TriggerDictionaryInitalization_xr);
        sInitialized = true;
      }
    }
namespace {
  static struct DictInit {
    DictInit() {
      TriggerDictionaryInitalization_xr();
    }
  } __TheDictionaryInitializer;
}
